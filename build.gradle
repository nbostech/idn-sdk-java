apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group 'io.nbos'
version '0.0.1'
allprojects {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

dependencies {

    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.4.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'io.swagger:swagger-parser:1.0.21'
    compile 'junit:junit:4.12'
}


////
model {
    tasks.generatePomFileForApiClientPublication {
        destination = file("$buildDir/ids-sdk-java-${version}.pom")
    }
}

//
//
ext {
    apiClientPomFile = file("${project.projectDir}/build/ids-sdk-java-${version}.pom")
    signedApiClientPomFile = file("${project.projectDir}/build/ids-sdk-java-${version}.asc")
}

// avoids duplicates in a jar file
tasks.withType(Jar) {
    eachFile {
        it.duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
}
//
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

task apiClientDocs(type: Javadoc) {
    source = sourceSets.main.java
}

task apiClientJar(type: Jar, dependsOn: [classes]) {
    baseName = 'ids-sdk-java'
    from sourceSets.main.output
}

task apiClientSourceJar(type: Jar) {
    baseName = 'ids-sdk-java-sources'
    from(sourceSets.main.java)
}

task apiClientDocsJar(type: Jar, dependsOn: apiClientDocs) {
    baseName = 'ids-sdk-java-javadoc'
    from apiClientDocs.destinationDir
}
//
signing {
    sign apiClientJar
    sign apiClientSourceJar
    sign apiClientDocsJar
}

task signApiClientPomFile(type: Sign) {
    sign project.ext.apiClientPomFile
}

def signedFiles = {
    ["signApiClientJar", "signApiClientSourceJar", "signApiClientDocsJar"].collectMany {
        project.tasks."${it}".signatureFiles.collect { it }
    }
}
//
def appendDependencies = { pomNode ->
    def dependenciesNode = pomNode.getAt("dependencies")

    if (dependenciesNode) {
        dependenciesNode = dependenciesNode[0]
    } else {
        dependenciesNode = pomNode.appendNode('dependencies')
    }

    //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
    configurations.compile.allDependencies.each {
        def dependencyNode = dependenciesNode.appendNode('dependency')
        dependencyNode.appendNode('groupId', it.group)
        dependencyNode.appendNode('artifactId', it.name)
        dependencyNode.appendNode('version', it.version)
    }
}
//
publishing {
    publications {
        apiClient(MavenPublication) {
            artifactId 'ids-sdk-java'
            artifact(apiClientJar) {
            }
            artifact(apiClientSourceJar) {
                classifier "sources"
            }
            artifact(apiClientDocsJar) {
                classifier "javadoc"
            }
            signedFiles().each { signedFile ->
                artifact(signedFile) {
                    def fileName = signedFile.name
                    classifier = fileName.contains("-sources") ? "sources" : (fileName.contains("-javadoc") ? 'javadoc' : null)
                    extension = 'jar.asc'
                }
            }
            def signedPomFile = file("${project.projectDir}/build/ids-sdk-java-${version}.pom.asc")
            if (signedPomFile) {
                artifact(signedPomFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }
            pom.withXml {
                def node = asNode()
                node.children().last() + {
                    resolveStrategy = DELEGATE_FIRST
                    name 'IDS Java SDK for NBOS.io'
                    description 'Interface Discovery Service for NBOS.io'
                    url 'https://github.com/nbostech/wavelabs-java-client-api'
                    scm {
                        url 'https://github.com/nbostech/wavelabs-java-client-api'
                        connection 'https://github.com/nbostech/wavelabs-java-client-api'
                        developerConnection 'https://github.com/nbostech/wavelabs-java-client-api'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'vineeln'
                            name 'Vineel Nalla'
                            email 'vineeln@nbostech.com'
                        }
                        developer {
                            id 'vivekkiran'
                            name 'Vivek Kiran'
                            email 'vivek.kiran@outlook.com'
                        }
                    }
                }
                appendDependencies(node)
            }

        }
    }
    repositories {
        maven {
            name 'maven2'
            credentials {
                username = "wavelabs"
                password = "Zq952FI6o7Pz"
            }
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
        }
        maven {
            name 'projRepo'
            url "file:/${project.projectDir}/build/repo"
        }
        maven {
            name 'nbosMaven'
            //url "http://nexus1.nbostech.com:8081/nexus/content/repositories/wavelabs"
            url "http://nexus1.nbostech.com:8081/nexus/content/repositories/wavelabs-snapshot"
            credentials {
                username = "admin"
                password = "admin123"
            }
        }
    }
}
//
//
task myTask << {
    signedFiles().each {
        println "signedfile: ${it}"
    }
}
